$ Constants declaration
final constInt int = 42;
final constFloat float = 3.14;
final constString string = "Hello, world!";
final constBool bool = true;

$ Record definitions
Point rec {
    x int;
    y int;
}

Person rec {
    name string;
    location Point;
    history int[];
}

$ Global variable initialization
x int = 5;
y float = 2.71;
z string = "Test string with escape \" and \\ and newline \n";
b bool = false;

$ Array initialization
arr int[] = array [10] of int;
people Person[] = array [2] of Person;

$ Function definitions
fun add(int a, int b) int {
    return a + b;
}

fun negateBool(bool b) bool {
    return !(b); $!b won't work and stop
}

fun getFirstChar(string s) string {
    return chr(s[0]);
}

fun computeSomething(int x, float y) float {
    return floor(x * y + 3.5);
}

$ Main function
fun main() {
    i int = 0;
    while (i < 10) {
        if (i % 2 == 0) {
            writeln("Even: " + chr(i));
        } else {
            writeln("Odd: " + chr(i));
        }
        i = i + 1;
    }

    for (j, 1, 5, 1) {
        writeln("Loop iteration: " + chr(j));
    }

    person Person = Person("Alice", Point(3, 7), array [5] of int);
    writeln("Person's name: " + person.name);
    writeln("Person's location: (" + chr(person.location.x) + ", " + chr(person.location.y) + ")");

    $ Testing operations
    result int = add(5, 10);
    testBool bool = negateBool(true);
    testChar string = getFirstChar("Hello");
    testFloat float = computeSomething(2, 3.14);

    writeln("Addition Result: " + chr(result));
    writeln("Negation Result: " + chr(testBool));
    writeln("First Char: " + testChar);
    writeln("Computed Float: " + chr(testFloat));

    $ Freeing memory
    free person;
}
