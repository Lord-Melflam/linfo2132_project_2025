package TestFile.Code;

public class TestCode {

  public static String basicCodeConstant = "$ Basic constant declarations\n"
      + "final pi float = 3.1415;\n"
      + "final tau float = pi * 2.0;\n"
      + "final name string = \"Tester\";\n"
      + "final isValid bool = !(false);\n"
      + "\n"
      + "fun main() {\n"
      + "    writeln(\"constants: \", pi, \" \", tau, \" \", name);\n"
      + "}\n";
  public static String recordArrayUsage = "final size int = 10;\n"
      + "\n"
      + "Vector rec {\n"
      + "    x float;\n"
      + "    y float;\n"
      + "    z float;\n"
      + "}\n"
      + "\n"
      + "fun main() {\n"
      + "    arr int[] = array [size] of int;\n"
      + "    v Vector = Vector(1.0, 2.0, 3.0);\n"
      + "    \n"
      + "    arr[0] = floor(v.x);\n"
      + "    free v;\n"
      + "}\n";
  public static String expression = "final a int = 5;\n"
      + "final b float = 3.2;\n"
      + "\n"
      + "fun calculate(int x) float {\n"
      + "    return -(x * b) + (a / 2.0);\n"
      + "}\n"
      + "\n"
      + "fun main() {\n"
      + "    writeFloat(calculate(10) % 3);\n"
      + "}\n";
  public static String controlStructure = "fun main() {\n"
      + "    n int = readInt();\n"
      + "    i int;\n"
      + "    \n"
      + "    for (i, 0, len(\"test\"), 1) {\n"
      + "        if (n > 0 && i % 2 == 0) {\n"
      + "            writeln(chr(65 + i));\n"
      + "        } else {\n"
      + "            write(\"Skip \");\n"
      + "        }\n"
      + "    }\n"
      + "}\n";
  public static String constantError = "$ Invalid: Using function in constant\n"
      + "final CONST int = square(5); \n"
      + "\n"
      + "fun square(int x) int {\n"
      + "    return x * x;\n"
      + "}\n";
  public static String typeMismatch = "final a string = \"5\";\n"
      + "fun main() {\n"
      + "    b int =a; $ Type mismatch string -> int\n"
      + "}\n";
  public static String invalidArrayAccess = "fun main() {\n"
      + "    arr int[] = array [5] of int;\n"
      + "    arr[5] = 10; $ Index 5 is out of bounds for size 5\n"
      + "}\n";
  public static String scopeViolation = "fun test() {\n"
      + "    if (true) {\n"
      + "        local int = 10;\n"
      + "    }\n"
      + "    writeln(local); $ 'local' out of scope\n"
      + "}\n";
  public static String operatorPrecedence = "fun main() {\n"
      + "    $ Should parse as (x + y) * z \n"
      + "    $ Not x + (y * z)\n"
      + "    x int = 3;\n"
      + "    y float = 2.5;\n"
      + "    z float = 4.0;\n"
      + "    result float = x + y * z;\n"
      + "}\n";
  public static String mixedTypeOperations = "fun main() {\n"
      + "    a int = 5;\n"
      + "    b float = 3.2;\n"
      + "    c float = a + b * 2.0;\n"
      + "    d int = floor(c);\n"
      + "}\n";
  public static String nestedRecord = "Employee rec {\n"
      + "    id int;\n"
      + "    info Person;\n"
      + "}\n"
      + "\n"
      + "fun main() {\n"
      + "    e Employee = Employee(1, Person(\"Alice\", Point(0,0), array [3] of int));\n"
      + "    e.info.location.x = 10;\n"
      + "}\n";

  public static String memoryManagement = "fun main() {\n"
      + "    points Point[] = array [10] of Point;\n"
      + "    i int;\n"
      + "    \n"
      + "    for (i, 0, 10, 1) {\n"
      + "        points[i] = Point(i, i*2);\n"
      + "    }\n"
      + "    \n"
      + "    free points; $ Must manually deallocate\n"
      + "}\n";
  public static String unrecognisedToken = "final @PI float = 3.14;\n"
      + "final MESSAGE string = \"Hello World!\";";

  public static String inputNotAscii = "// Petit programme : Constantes et fonction simple\n"
      + "final PI float = 3.14;\n"
      + "final MESSAGE string = \"Hello World!\";\n"
      + "\n"
      + "fun greet() {\n"
      + "    writeln(MESSAGE);\n"
      + "}\n"
      + "\n"
      + "fun main() {\n"
      + "    greet();\n"
      + "}\n"
      + "\n"
      + "// Programme intermédiaire : Structures de contrôle et enregistrements\n"
      + "Person rec {\n"
      + "    name string;\n"
      + "    age int;\n"
      + "}\n"
      + "\n"
      + "a int = 10;\n";
}
